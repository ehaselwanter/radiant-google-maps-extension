- content_for 'page_css' do
  :sass
    #gmap
      width: 100%
      height: 400px

=GMap.header(:host => request.host)
%script{ 'type' => "text/javascript", :src   => "/javascripts/admin/admin_map.js" }
- form_for [:admin, @google_map, @marker] do |f|
  = f.hidden_field :google_map_id, :class => 'textbox', :maxlength => 100, :value => @google_map.id
  .form-area
    %p.title
      %label{:for=>"marker_name"}
        Name
      = f.text_field :name, :class => 'textbox', :maxlength => 100
    %div.row
      %table.fieldset
        %tr
          %th.label
            %label{:for => "marker_title"} Title
          %td.field
            = f.text_field :title, :class => 'textbox', :maxlength => 100
        %tr
          %th.label
            %label{:for => "marker_latitude"} Latitude
          %td.field
            - if @marker.position.nil?
              = f.text_field :latitude, :class => 'textbox', :maxlength => 100, :value => @google_map.center.y
            - else
              = f.text_field :latitude, :class => 'textbox', :maxlength => 100, :value => @marker.position.y
        %tr
          %th.label
            %label{:for => "marker_longitude"} Longitude
          %td.field
            - if @marker.position.nil?
              = f.text_field :longitude, :class => 'textbox', :maxlength => 100, :value => @google_map.center.x
            - else
              = f.text_field :longitude, :class => 'textbox', :maxlength => 100, :value => @marker.position.x
        %tr
          %th.label
            %label{:for => "marker_zoom"} Zoom level
          %td.field
            = f.text_field :zoom, :class => 'textbox', :maxlength => 100              
        %tr
          %th.label
            %label
              Manual Placement
          %td.field
            %div#gmap
            = GoogleMap.generate_admin_google_map_marker_html(@marker.google_map_id,@marker)
    %p.content
      %label{:for=>"marker_content"} Content
      ~ f.text_area :content, :class => "textarea", :style => "width: 100%"
    %p
      %label{:for=>"marker_filter_id"} Filter
      = f.select :filter_id, [['none', '']] + TextFilter.descendants.map { |f| f.filter_name }.sort, :id => 'marker_filter'

    = updated_stamp @marker

  %p.buttons
    = save_model_button(@marker)
    = save_model_and_continue_editing_button(@marker)
    or
    = link_to 'Cancel', admin_google_map_url(@google_map)
